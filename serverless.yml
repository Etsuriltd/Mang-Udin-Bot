# Welcome to Serverless!
#
# This file is the main config file for your service.
# It's very minimal at this point and uses default values.
# You can always add more config options for more control.
# We've included some commented out config examples here.
# Just uncomment any of them to get that config option.
#
# For full config options, check the docs:
#    docs.serverless.com
#
# Happy Coding!

service: lapor-daily # NOTE: update this with your service name

# You can pin your service to only deploy with a specific Serverless version
# Check out our docs for more details
# frameworkVersion: "=X.X.X"

provider:
  name: aws
  runtime: nodejs8.10

# you can overwrite defaults here
  stage: dev
  region: us-east-1
  environment:
    DB_HOST: ${file(./env.yml):postgresql.${self:provider.stage}.host}
    DB_PORT: ${file(./env.yml):postgresql.${self:provider.stage}.port}
    DB_USERNAME: ${file(./env.yml):postgresql.${self:provider.stage}.username}
    DB_PASSWORD: ${file(./env.yml):postgresql.${self:provider.stage}.password}
    DB_DATABASE: ${file(./env.yml):postgresql.${self:provider.stage}.database}
    DB_MAX_POOL: ${file(./env.yml):postgresql.${self:provider.stage}.max_pool}
    DB_DIALECT: ${file(./env.yml):postgresql.${self:provider.stage}.dialect}

# you can add statements to the Lambda function's IAM Role here
#  iamRoleStatements:
#    - Effect: "Allow"
#      Action:
#        - "s3:ListBucket"
#      Resource: { "Fn::Join" : ["", ["arn:aws:s3:::", { "Ref" : "ServerlessDeploymentBucket" } ] ]  }
#    - Effect: "Allow"
#      Action:
#        - "s3:PutObject"
#      Resource:
#        Fn::Join:
#          - ""
#          - - "arn:aws:s3:::"
#            - "Ref" : "ServerlessDeploymentBucket"
#            - "/*"

# you can define service wide environment variables here
#  environment:
#    variable1: value1

# you can add packaging information here
#package:
#  include:
#    - include-me.js
#    - include-me-dir/**
#  exclude:
#    - exclude-me.js
#    - exclude-me-dir/**

functions:
  bot-mang-udin:
    handler: dist/handler/post_message_handler.postMessage
    memorySize: 1024
    timeout: 60
    events:
      - schedule: cron(0 03 ? * MON-FRI *)

  slack-event-hook:
    handler: dist/handler/receive_message_handler.receiveMessage
    memorySize: 1024
    timeout: 60
    events:
      - http:
          path: /slack-hook
          method: post

plugins:

custom:
  webpackIncludeModules:
    packagePath: './package.json'

package:
  excludeDevDependencies: false